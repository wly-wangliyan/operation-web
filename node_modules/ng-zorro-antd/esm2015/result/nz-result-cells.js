/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * @license
 * Copyright Alibaba.com All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */
import { Directive } from '@angular/core';
export class NzResultTitleDirective {
}
NzResultTitleDirective.decorators = [
    { type: Directive, args: [{
                selector: 'div[nz-result-title]',
                exportAs: 'nzResultTitle',
                host: {
                    class: 'ant-result-title'
                }
            },] }
];
export class NzResultSubtitleDirective {
}
NzResultSubtitleDirective.decorators = [
    { type: Directive, args: [{
                selector: 'div[nz-result-subtitle]',
                exportAs: 'nzResultSubtitle',
                host: {
                    class: 'ant-result-subtitle'
                }
            },] }
];
export class NzResultIconDirective {
}
NzResultIconDirective.decorators = [
    { type: Directive, args: [{
                selector: 'i[nz-result-icon], div[nz-result-icon]',
                exportAs: 'nzResultIcon'
            },] }
];
export class NzResultContentDirective {
}
NzResultContentDirective.decorators = [
    { type: Directive, args: [{
                selector: 'div[nz-result-content]',
                exportAs: 'nzResultContent',
                host: {
                    class: 'ant-result-content'
                }
            },] }
];
export class NzResultExtraDirective {
}
NzResultExtraDirective.decorators = [
    { type: Directive, args: [{
                selector: 'div[nz-result-extra]',
                exportAs: 'nzResultExtra',
                host: {
                    class: 'ant-result-extra'
                }
            },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibnotcmVzdWx0LWNlbGxzLmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmctem9ycm8tYW50ZC9yZXN1bHQvIiwic291cmNlcyI6WyJuei1yZXN1bHQtY2VsbHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFRQSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBUzFDLE1BQU0sT0FBTyxzQkFBc0I7OztZQVBsQyxTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLHNCQUFzQjtnQkFDaEMsUUFBUSxFQUFFLGVBQWU7Z0JBQ3pCLElBQUksRUFBRTtvQkFDSixLQUFLLEVBQUUsa0JBQWtCO2lCQUMxQjthQUNGOztBQVVELE1BQU0sT0FBTyx5QkFBeUI7OztZQVByQyxTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLHlCQUF5QjtnQkFDbkMsUUFBUSxFQUFFLGtCQUFrQjtnQkFDNUIsSUFBSSxFQUFFO29CQUNKLEtBQUssRUFBRSxxQkFBcUI7aUJBQzdCO2FBQ0Y7O0FBT0QsTUFBTSxPQUFPLHFCQUFxQjs7O1lBSmpDLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsd0NBQXdDO2dCQUNsRCxRQUFRLEVBQUUsY0FBYzthQUN6Qjs7QUFVRCxNQUFNLE9BQU8sd0JBQXdCOzs7WUFQcEMsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSx3QkFBd0I7Z0JBQ2xDLFFBQVEsRUFBRSxpQkFBaUI7Z0JBQzNCLElBQUksRUFBRTtvQkFDSixLQUFLLEVBQUUsb0JBQW9CO2lCQUM1QjthQUNGOztBQVVELE1BQU0sT0FBTyxzQkFBc0I7OztZQVBsQyxTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLHNCQUFzQjtnQkFDaEMsUUFBUSxFQUFFLGVBQWU7Z0JBQ3pCLElBQUksRUFBRTtvQkFDSixLQUFLLEVBQUUsa0JBQWtCO2lCQUMxQjthQUNGIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IEFsaWJhYmEuY29tIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9naXRodWIuY29tL05HLVpPUlJPL25nLXpvcnJvLWFudGQvYmxvYi9tYXN0ZXIvTElDRU5TRVxuICovXG5cbmltcG9ydCB7IERpcmVjdGl2ZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5ARGlyZWN0aXZlKHtcbiAgc2VsZWN0b3I6ICdkaXZbbnotcmVzdWx0LXRpdGxlXScsXG4gIGV4cG9ydEFzOiAnbnpSZXN1bHRUaXRsZScsXG4gIGhvc3Q6IHtcbiAgICBjbGFzczogJ2FudC1yZXN1bHQtdGl0bGUnXG4gIH1cbn0pXG5leHBvcnQgY2xhc3MgTnpSZXN1bHRUaXRsZURpcmVjdGl2ZSB7fVxuXG5ARGlyZWN0aXZlKHtcbiAgc2VsZWN0b3I6ICdkaXZbbnotcmVzdWx0LXN1YnRpdGxlXScsXG4gIGV4cG9ydEFzOiAnbnpSZXN1bHRTdWJ0aXRsZScsXG4gIGhvc3Q6IHtcbiAgICBjbGFzczogJ2FudC1yZXN1bHQtc3VidGl0bGUnXG4gIH1cbn0pXG5leHBvcnQgY2xhc3MgTnpSZXN1bHRTdWJ0aXRsZURpcmVjdGl2ZSB7fVxuXG5ARGlyZWN0aXZlKHtcbiAgc2VsZWN0b3I6ICdpW256LXJlc3VsdC1pY29uXSwgZGl2W256LXJlc3VsdC1pY29uXScsXG4gIGV4cG9ydEFzOiAnbnpSZXN1bHRJY29uJ1xufSlcbmV4cG9ydCBjbGFzcyBOelJlc3VsdEljb25EaXJlY3RpdmUge31cblxuQERpcmVjdGl2ZSh7XG4gIHNlbGVjdG9yOiAnZGl2W256LXJlc3VsdC1jb250ZW50XScsXG4gIGV4cG9ydEFzOiAnbnpSZXN1bHRDb250ZW50JyxcbiAgaG9zdDoge1xuICAgIGNsYXNzOiAnYW50LXJlc3VsdC1jb250ZW50J1xuICB9XG59KVxuZXhwb3J0IGNsYXNzIE56UmVzdWx0Q29udGVudERpcmVjdGl2ZSB7fVxuXG5ARGlyZWN0aXZlKHtcbiAgc2VsZWN0b3I6ICdkaXZbbnotcmVzdWx0LWV4dHJhXScsXG4gIGV4cG9ydEFzOiAnbnpSZXN1bHRFeHRyYScsXG4gIGhvc3Q6IHtcbiAgICBjbGFzczogJ2FudC1yZXN1bHQtZXh0cmEnXG4gIH1cbn0pXG5leHBvcnQgY2xhc3MgTnpSZXN1bHRFeHRyYURpcmVjdGl2ZSB7fVxuIl19